{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{createContext,useState,useEffect}from'react';import{userAPI}from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export var UsersContext=createContext({users:[],loading:false,addUser:function addUser(user){},updateUser:function updateUser(user){},refreshUsers:function refreshUsers(){}});export var UsersProvider=function UsersProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var refreshUsers=function(){var _ref2=_asyncToGenerator(function*(){try{setLoading(true);var fetchedUsers=yield userAPI.getAllUsers();setUsers(fetchedUsers);}catch(error){console.error('Error fetching users:',error);}finally{setLoading(false);}});return function refreshUsers(){return _ref2.apply(this,arguments);};}();useEffect(function(){refreshUsers();},[]);var addUser=function(){var _ref3=_asyncToGenerator(function*(user){try{if(!user.username||!user.fullName||!user.role||!user.password){throw new Error('Username, full name, role, and password are required');}setLoading(true);var response=yield userAPI.addUser(user);yield refreshUsers();return response.user;}catch(error){console.error('Error adding user:',error);throw error;}finally{setLoading(false);}});return function addUser(_x){return _ref3.apply(this,arguments);};}();var updateUser=function(){var _ref4=_asyncToGenerator(function*(updatedUser){try{if(!updatedUser.id&&!updatedUser.username){throw new Error('User ID or username is required for updating');}var username=updatedUser.username||updatedUser.id;setLoading(true);if(Object.keys(updatedUser).length===2&&updatedUser.status){yield userAPI.updateUserStatus(username,updatedUser.status);}else{var updateData={};if(updatedUser.fullName)updateData.fullName=updatedUser.fullName;if(updatedUser.role)updateData.role=updatedUser.role;if(updatedUser.status)updateData.status=updatedUser.status;if(updatedUser.password)updateData.password=updatedUser.password;yield userAPI.updateUser(username,updateData);}yield refreshUsers();}catch(error){console.error('Error updating user:',error);throw error;}finally{setLoading(false);}});return function updateUser(_x2){return _ref4.apply(this,arguments);};}();return _jsx(UsersContext.Provider,{value:{users:users,loading:loading,addUser:addUser,updateUser:updateUser,refreshUsers:refreshUsers},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","userAPI","jsx","_jsx","UsersContext","users","loading","addUser","user","updateUser","refreshUsers","UsersProvider","_ref","children","_useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","setLoading","_ref2","_asyncToGenerator","fetchedUsers","getAllUsers","error","console","apply","arguments","_ref3","username","fullName","role","password","Error","response","_x","_ref4","updatedUser","id","Object","keys","length","status","updateUserStatus","updateData","_x2","Provider","value"],"sources":["c:/Users/ajohn/loansiya-webapp1.3.4/src/contexts/UsersContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { userAPI } from '../services/api';\r\n\r\nexport const UsersContext = createContext({\r\n  users: [],\r\n  loading: false,\r\n  addUser: (user) => {},\r\n  updateUser: (user) => {},\r\n  refreshUsers: () => {},\r\n});\r\n\r\nexport const UsersProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch users from GCS on component mount\r\n  const refreshUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const fetchedUsers = await userAPI.getAllUsers();\r\n      setUsers(fetchedUsers);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      // Keep existing users if fetch fails\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshUsers();\r\n  }, []);\r\n\r\n  const addUser = async (user) => {\r\n    try {\r\n      // Validate required fields\r\n      if (!user.username || !user.fullName || !user.role || !user.password) {\r\n        throw new Error('Username, full name, role, and password are required');\r\n      }\r\n\r\n      setLoading(true);\r\n      const response = await userAPI.addUser(user);\r\n      \r\n      // Refresh users list to get updated data from GCS\r\n      await refreshUsers();\r\n      \r\n      return response.user;\r\n    } catch (error) {\r\n      console.error('Error adding user:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (updatedUser) => {\r\n    try {\r\n      if (!updatedUser.id && !updatedUser.username) {\r\n        throw new Error('User ID or username is required for updating');\r\n      }\r\n      \r\n      const username = updatedUser.username || updatedUser.id;\r\n      \r\n      setLoading(true);\r\n\r\n      // For simple status updates\r\n      if (Object.keys(updatedUser).length === 2 && updatedUser.status) {\r\n        await userAPI.updateUserStatus(username, updatedUser.status);\r\n      } else {\r\n        // For full user updates\r\n        const updateData = {};\r\n        if (updatedUser.fullName) updateData.fullName = updatedUser.fullName;\r\n        if (updatedUser.role) updateData.role = updatedUser.role;\r\n        if (updatedUser.status) updateData.status = updatedUser.status;\r\n        if (updatedUser.password) updateData.password = updatedUser.password;\r\n        \r\n        await userAPI.updateUser(username, updateData);\r\n      }\r\n      \r\n      // Refresh users list to get updated data from GCS\r\n      await refreshUsers();\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider value={{\r\n      users,\r\n      loading,\r\n      addUser,\r\n      updateUser,\r\n      refreshUsers,\r\n    }}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}