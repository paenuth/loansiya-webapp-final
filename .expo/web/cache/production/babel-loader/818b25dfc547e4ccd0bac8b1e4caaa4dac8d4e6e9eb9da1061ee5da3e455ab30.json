{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import Constants from'expo-constants';var getApiUrl=function getApiUrl(){var _Constants$expoConfig,_Constants$expoConfig2,_Constants$expoConfig3,_Constants$expoConfig4;console.log('Environment debug info:',{NODE_ENV:process.env.NODE_ENV,REACT_APP_API_URL:process.env.REACT_APP_API_URL,expoConfig:(_Constants$expoConfig=Constants.expoConfig)==null?void 0:(_Constants$expoConfig2=_Constants$expoConfig.extra)==null?void 0:_Constants$expoConfig2.REACT_APP_API_URL,isProduction:process.env.NODE_ENV==='production'});if(process.env.NODE_ENV==='production'&&process.env.REACT_APP_API_URL){console.log('Using production env var:',process.env.REACT_APP_API_URL);return process.env.REACT_APP_API_URL;}if((_Constants$expoConfig3=Constants.expoConfig)!=null&&(_Constants$expoConfig4=_Constants$expoConfig3.extra)!=null&&_Constants$expoConfig4.REACT_APP_API_URL){console.log('Using Expo config:',Constants.expoConfig.extra.REACT_APP_API_URL);return Constants.expoConfig.extra.REACT_APP_API_URL;}if(process.env.REACT_APP_API_URL){console.log('Using env var fallback:',process.env.REACT_APP_API_URL);return process.env.REACT_APP_API_URL;}console.log('Using localhost fallback');return'http://localhost:5600';};export var API_BASE_URL=getApiUrl();export var authAPI={login:function(){var _login=_asyncToGenerator(function*(username,password){try{var response=yield fetch(API_BASE_URL+\"/officers/login\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username,password:password})});if(!response.ok){var error=yield response.json();throw new Error(error.message||'Login failed');}var data=yield response.json();if(!data.success){throw new Error(data.message||'Login failed');}return{user:{username:data.officer.username,fullName:data.officer.fullName,role:data.officer.role,status:data.officer.status}};}catch(error){console.error('Login Error:',error);throw error;}});function login(_x,_x2){return _login.apply(this,arguments);}return login;}()};export var userAPI={getAllUsers:function(){var _getAllUsers=_asyncToGenerator(function*(){try{var response=yield fetch(API_BASE_URL+\"/users\");if(!response.ok){throw new Error('Failed to fetch users');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function getAllUsers(){return _getAllUsers.apply(this,arguments);}return getAllUsers;}(),updateUserStatus:function(){var _updateUserStatus=_asyncToGenerator(function*(username,status){try{var response=yield fetch(API_BASE_URL+\"/users/\"+username+\"/status\",{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({status:status})});if(!response.ok){throw new Error('Failed to update user status');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function updateUserStatus(_x3,_x4){return _updateUserStatus.apply(this,arguments);}return updateUserStatus;}(),addUser:function(){var _addUser=_asyncToGenerator(function*(userData){try{var response=yield fetch(API_BASE_URL+\"/users\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok){var error=yield response.json();throw new Error(error.error||'Failed to add user');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function addUser(_x5){return _addUser.apply(this,arguments);}return addUser;}(),updateUser:function(){var _updateUser=_asyncToGenerator(function*(username,userData){try{var response=yield fetch(API_BASE_URL+\"/users/\"+username,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok){var error=yield response.json();throw new Error(error.error||'Failed to update user');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function updateUser(_x6,_x7){return _updateUser.apply(this,arguments);}return updateUser;}()};var DOCUMENT_TYPE_MAP={'Valid Id':'validid','ORCR':'orcr','Land Title':'landtitle','Deeds of Assignment':'deed','Promissory Note':'promissory-note'};export var DOCUMENT_CATEGORIES={APPLICATION_DOCS:['Valid Id','ORCR','Land Title','Deeds of Assignment'],SIGNED_DOCS:['Promissory Note','Signed Agreement']};export var clientAPI={getAllClients:function(){var _getAllClients=_asyncToGenerator(function*(){try{console.log('Fetching clients from:',API_BASE_URL);var response=yield fetch(API_BASE_URL+\"/clients\");if(!response.ok){throw new Error('Failed to fetch clients');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function getAllClients(){return _getAllClients.apply(this,arguments);}return getAllClients;}(),getClientById:function(){var _getClientById=_asyncToGenerator(function*(cid){try{var response=yield fetch(API_BASE_URL+\"/client/\"+cid);if(!response.ok){throw new Error('Failed to fetch client');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function getClientById(_x8){return _getClientById.apply(this,arguments);}return getClientById;}(),getClientScore:function(){var _getClientScore=_asyncToGenerator(function*(cid){try{var response=yield fetch(API_BASE_URL+\"/score/\"+cid,{method:'POST'});if(!response.ok){throw new Error('Failed to fetch client score');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function getClientScore(_x9){return _getClientScore.apply(this,arguments);}return getClientScore;}(),processMetrics:function(){var _processMetrics=_asyncToGenerator(function*(cid){try{var response=yield fetch(API_BASE_URL+\"/metrics/\"+cid,{method:'POST'});if(!response.ok){throw new Error('Failed to process metrics');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function processMetrics(_x0){return _processMetrics.apply(this,arguments);}return processMetrics;}(),processLoanDecision:function(){var _processLoanDecision=_asyncToGenerator(function*(cid,decision){var additionalData=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{var response=yield fetch(API_BASE_URL+\"/loan/\"+cid+\"/decision\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(_objectSpread({decision:decision},additionalData))});if(!response.ok){throw new Error('Failed to process loan decision');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function processLoanDecision(_x1,_x10){return _processLoanDecision.apply(this,arguments);}return processLoanDecision;}(),fetchClientLoanData:function(){var _fetchClientLoanData=_asyncToGenerator(function*(cid){try{var response=yield fetch(API_BASE_URL+\"/client-loan-data/\"+cid);if(!response.ok){throw new Error('Failed to fetch loan data');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function fetchClientLoanData(_x11){return _fetchClientLoanData.apply(this,arguments);}return fetchClientLoanData;}(),updateLoanAmount:function(){var _updateLoanAmount=_asyncToGenerator(function*(cid,amount){try{var response=yield fetch(API_BASE_URL+\"/loan/\"+cid+\"/amount\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({amount:amount})});if(!response.ok){throw new Error('Failed to update loan amount');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function updateLoanAmount(_x12,_x13){return _updateLoanAmount.apply(this,arguments);}return updateLoanAmount;}(),notifications:{getNotifications:function(){var _getNotifications=_asyncToGenerator(function*(){try{var response=yield fetch(API_BASE_URL+\"/notifications\");if(!response.ok){throw new Error('Failed to fetch notifications');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function getNotifications(){return _getNotifications.apply(this,arguments);}return getNotifications;}(),createNotification:function(){var _createNotification=_asyncToGenerator(function*(notification){try{var response=yield fetch(API_BASE_URL+\"/notifications\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(notification)});if(!response.ok){throw new Error('Failed to create notification');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function createNotification(_x14){return _createNotification.apply(this,arguments);}return createNotification;}(),markAsRead:function(){var _markAsRead=_asyncToGenerator(function*(notificationIds){try{var response=yield fetch(API_BASE_URL+\"/notifications/mark-read\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({notificationIds:notificationIds})});if(!response.ok){throw new Error('Failed to mark notifications as read');}return response.json();}catch(error){console.error('API Error:',error);throw error;}});function markAsRead(_x15){return _markAsRead.apply(this,arguments);}return markAsRead;}()},viewDocumentByFilename:function(){var _viewDocumentByFilename=_asyncToGenerator(function*(cid,filename){var date=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{var paddedCid=cid.toString().padStart(3,'0');console.log('Fetching document file:',filename,'for CID:',paddedCid,'date:',date);var url=API_BASE_URL+\"/documents/\"+paddedCid+\"/file/\"+encodeURIComponent(filename);if(date){url+=\"?date=\"+encodeURIComponent(date);}var response=yield fetch(url);if(!response.ok){var errorData=yield response.json();throw new Error(errorData.error||'Failed to fetch document');}var contentType=response.headers.get('content-type');var blob=yield response.blob();var objectUrl=URL.createObjectURL(new Blob([blob],{type:contentType}));return{url:objectUrl,type:contentType};}catch(error){console.error('API Error:',error);throw error;}});function viewDocumentByFilename(_x16,_x17){return _viewDocumentByFilename.apply(this,arguments);}return viewDocumentByFilename;}(),viewDocument:function(){var _viewDocument=_asyncToGenerator(function*(cid,documentType){try{var paddedCid=cid.toString().padStart(3,'0');var internalType=DOCUMENT_TYPE_MAP[documentType];if(!internalType){throw new Error(\"Invalid document type: \"+documentType);}var encodedType=encodeURIComponent(internalType);console.log('Fetching document:',documentType,'as',internalType,'for CID:',paddedCid);var response=yield fetch(API_BASE_URL+\"/documents/\"+paddedCid+\"/\"+encodedType);if(!response.ok){var errorData=yield response.json();throw new Error(errorData.error||'Failed to fetch document');}var contentType=response.headers.get('content-type');var blob=yield response.blob();var objectUrl=URL.createObjectURL(new Blob([blob],{type:contentType}));return{url:objectUrl,type:contentType};}catch(error){console.error('API Error:',error);throw error;}});function viewDocument(_x18,_x19){return _viewDocument.apply(this,arguments);}return viewDocument;}(),getLatestDocuments:function(){var _getLatestDocuments=_asyncToGenerator(function*(cid){try{var paddedCid=cid.toString().padStart(3,'0');console.log('Getting documents for padded CID:',paddedCid);var response=yield fetch(API_BASE_URL+\"/documents/\"+paddedCid+\"/all\");if(!response.ok){var errorData=yield response.json();throw new Error(errorData.error||'Failed to fetch documents');}var data=yield response.json();return data.documents;}catch(error){console.error('API Error:',error);throw error;}});function getLatestDocuments(_x20){return _getLatestDocuments.apply(this,arguments);}return getLatestDocuments;}(),getDocumentDates:function(){var _getDocumentDates=_asyncToGenerator(function*(cid){try{var paddedCid=cid.toString().padStart(3,'0');console.log('Getting document dates for padded CID:',paddedCid);var response=yield fetch(API_BASE_URL+\"/documents/\"+paddedCid+\"/dates\");if(!response.ok){var errorData=yield response.json();throw new Error(errorData.error||'Failed to fetch document dates');}var data=yield response.json();return data.dates;}catch(error){console.error('API Error:',error);throw error;}});function getDocumentDates(_x21){return _getDocumentDates.apply(this,arguments);}return getDocumentDates;}(),getDocumentsByDate:function(){var _getDocumentsByDate=_asyncToGenerator(function*(cid,date){try{var paddedCid=cid.toString().padStart(3,'0');console.log('Getting documents for padded CID:',paddedCid,'date:',date);var response=yield fetch(API_BASE_URL+\"/documents/\"+paddedCid+\"/date/\"+date);if(!response.ok){var errorData=yield response.json();throw new Error(errorData.error||'Failed to fetch documents');}var data=yield response.json();return data.documents;}catch(error){console.error('API Error:',error);throw error;}});function getDocumentsByDate(_x22,_x23){return _getDocumentsByDate.apply(this,arguments);}return getDocumentsByDate;}()};","map":{"version":3,"names":["Constants","getApiUrl","_Constants$expoConfig","_Constants$expoConfig2","_Constants$expoConfig3","_Constants$expoConfig4","console","log","NODE_ENV","process","env","REACT_APP_API_URL","expoConfig","extra","isProduction","API_BASE_URL","authAPI","login","_login","_asyncToGenerator","username","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","message","data","success","user","officer","fullName","role","status","_x","_x2","apply","arguments","userAPI","getAllUsers","_getAllUsers","updateUserStatus","_updateUserStatus","_x3","_x4","addUser","_addUser","userData","_x5","updateUser","_updateUser","_x6","_x7","DOCUMENT_TYPE_MAP","DOCUMENT_CATEGORIES","APPLICATION_DOCS","SIGNED_DOCS","clientAPI","getAllClients","_getAllClients","getClientById","_getClientById","cid","_x8","getClientScore","_getClientScore","_x9","processMetrics","_processMetrics","_x0","processLoanDecision","_processLoanDecision","decision","additionalData","length","undefined","_objectSpread","_x1","_x10","fetchClientLoanData","_fetchClientLoanData","_x11","updateLoanAmount","_updateLoanAmount","amount","_x12","_x13","notifications","getNotifications","_getNotifications","createNotification","_createNotification","notification","_x14","markAsRead","_markAsRead","notificationIds","_x15","viewDocumentByFilename","_viewDocumentByFilename","filename","date","paddedCid","toString","padStart","url","encodeURIComponent","errorData","contentType","get","blob","objectUrl","URL","createObjectURL","Blob","type","_x16","_x17","viewDocument","_viewDocument","documentType","internalType","encodedType","_x18","_x19","getLatestDocuments","_getLatestDocuments","documents","_x20","getDocumentDates","_getDocumentDates","dates","_x21","getDocumentsByDate","_getDocumentsByDate","_x22","_x23"],"sources":["c:/Users/ajohn/loansiya-webapp1.3.4/src/services/api.js"],"sourcesContent":["import Constants from 'expo-constants';\r\n\r\n// Get API URL with multiple fallback strategies for different environments\r\nconst getApiUrl = () => {\r\n  // Debug logging\r\n  console.log('Environment debug info:', {\r\n    NODE_ENV: process.env.NODE_ENV,\r\n    REACT_APP_API_URL: process.env.REACT_APP_API_URL,\r\n    expoConfig: Constants.expoConfig?.extra?.REACT_APP_API_URL,\r\n    isProduction: process.env.NODE_ENV === 'production'\r\n  });\r\n  \r\n  // For production builds, prioritize environment variables\r\n  if (process.env.NODE_ENV === 'production' && process.env.REACT_APP_API_URL) {\r\n    console.log('Using production env var:', process.env.REACT_APP_API_URL);\r\n    return process.env.REACT_APP_API_URL;\r\n  }\r\n  \r\n  // For Expo builds, use Constants\r\n  if (Constants.expoConfig?.extra?.REACT_APP_API_URL) {\r\n    console.log('Using Expo config:', Constants.expoConfig.extra.REACT_APP_API_URL);\r\n    return Constants.expoConfig.extra.REACT_APP_API_URL;\r\n  }\r\n  \r\n  // Fallback to environment variable\r\n  if (process.env.REACT_APP_API_URL) {\r\n    console.log('Using env var fallback:', process.env.REACT_APP_API_URL);\r\n    return process.env.REACT_APP_API_URL;\r\n  }\r\n  \r\n  // Development fallback\r\n  console.log('Using localhost fallback');\r\n  return 'http://localhost:5600';\r\n};\r\n\r\nexport const API_BASE_URL = getApiUrl();\r\n\r\n// Authentication API endpoints\r\nexport const authAPI = {\r\n  login: async (username, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/officers/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Login failed');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      if (!data.success) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Map the officer data to the expected user format\r\n      return {\r\n        user: {\r\n          username: data.officer.username,\r\n          fullName: data.officer.fullName,\r\n          role: data.officer.role, // Use the role directly from backend\r\n          status: data.officer.status\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Login Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// User Management API endpoints\r\nexport const userAPI = {\r\n  // Get all users\r\n  getAllUsers: async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch users');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update user status\r\n  updateUserStatus: async (username, status) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users/${username}/status`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ status })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update user status');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Add new user\r\n  addUser: async (userData) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n      });\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Failed to add user');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update user\r\n  updateUser: async (username, userData) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users/${username}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n      });\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Failed to update user');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Document type mapping for API requests\r\nconst DOCUMENT_TYPE_MAP = {\r\n  'Valid Id': 'validid',\r\n  'ORCR': 'orcr',\r\n  'Land Title': 'landtitle',\r\n  'Deeds of Assignment': 'deed',\r\n  'Promissory Note': 'promissory-note'\r\n};\r\n\r\n// Document categories\r\nexport const DOCUMENT_CATEGORIES = {\r\n  APPLICATION_DOCS: ['Valid Id', 'ORCR', 'Land Title', 'Deeds of Assignment'],\r\n  SIGNED_DOCS: ['Promissory Note', 'Signed Agreement']\r\n};\r\n\r\nexport const clientAPI = {\r\n  // Get all clients from the Credit Scoring API\r\n  getAllClients: async () => {\r\n    try {\r\n      console.log('Fetching clients from:', API_BASE_URL);\r\n      const response = await fetch(`${API_BASE_URL}/clients`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch clients');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get single client by CID\r\n  getClientById: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/client/${cid}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch client');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get client score data\r\n  getClientScore: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/score/${cid}`, {\r\n        method: 'POST'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch client score');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Process client metrics\r\n  processMetrics: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/metrics/${cid}`, {\r\n        method: 'POST'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process metrics');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Process loan decision (approve/decline)\r\n  processLoanDecision: async (cid, decision, additionalData = {}) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/loan/${cid}/decision`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ decision, ...additionalData })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process loan decision');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Fetch client loan data\r\n  fetchClientLoanData: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/client-loan-data/${cid}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch loan data');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update loan amount\r\n  updateLoanAmount: async (cid, amount) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/loan/${cid}/amount`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ amount })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update loan amount');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Notification endpoints\r\n  notifications: {\r\n    // Get notifications for the current user\r\n    getNotifications: async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/notifications`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch notifications');\r\n        }\r\n        return response.json();\r\n      } catch (error) {\r\n        console.error('API Error:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // Create a new notification\r\n    createNotification: async (notification) => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/notifications`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(notification)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to create notification');\r\n        }\r\n        return response.json();\r\n      } catch (error) {\r\n        console.error('API Error:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // Mark notifications as read\r\n    markAsRead: async (notificationIds) => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/notifications/mark-read`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ notificationIds })\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to mark notifications as read');\r\n        }\r\n        return response.json();\r\n      } catch (error) {\r\n        console.error('API Error:', error);\r\n        throw error;\r\n      }\r\n    }\r\n  },\r\n\r\n  // View client document by specific filename\r\n  viewDocumentByFilename: async (cid, filename, date = null) => {\r\n    try {\r\n      // Pad CID with leading zeros\r\n      const paddedCid = cid.toString().padStart(3, '0');\r\n\r\n      // Use the new endpoint that takes specific filename\r\n      console.log('Fetching document file:', filename, 'for CID:', paddedCid, 'date:', date);\r\n      \r\n      // Build URL with optional date parameter\r\n      let url = `${API_BASE_URL}/documents/${paddedCid}/file/${encodeURIComponent(filename)}`;\r\n      if (date) {\r\n        url += `?date=${encodeURIComponent(date)}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch document');\r\n      }\r\n      \r\n      // Get content type from response headers\r\n      const contentType = response.headers.get('content-type');\r\n      const blob = await response.blob();\r\n      \r\n      // Create object URL for preview\r\n      const objectUrl = URL.createObjectURL(new Blob([blob], { type: contentType }));\r\n      return {\r\n        url: objectUrl,\r\n        type: contentType\r\n      };\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // View client document with preview support (legacy - uses document type)\r\n  viewDocument: async (cid, documentType) => {\r\n    try {\r\n      // Pad CID with leading zeros\r\n      const paddedCid = cid.toString().padStart(3, '0');\r\n\r\n      // Map document type to internal type\r\n      const internalType = DOCUMENT_TYPE_MAP[documentType];\r\n      if (!internalType) {\r\n        throw new Error(`Invalid document type: ${documentType}`);\r\n      }\r\n\r\n      // Encode the internal type for URL safety\r\n      const encodedType = encodeURIComponent(internalType);\r\n      console.log('Fetching document:', documentType, 'as', internalType, 'for CID:', paddedCid);\r\n      const response = await fetch(`${API_BASE_URL}/documents/${paddedCid}/${encodedType}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch document');\r\n      }\r\n      \r\n      // Get content type from response headers\r\n      const contentType = response.headers.get('content-type');\r\n      const blob = await response.blob();\r\n      \r\n      // Create object URL for preview\r\n      const objectUrl = URL.createObjectURL(new Blob([blob], { type: contentType }));\r\n      return {\r\n        url: objectUrl,\r\n        type: contentType\r\n      };\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get all documents from latest folder\r\n  getLatestDocuments: async (cid) => {\r\n    try {\r\n      // Pad CID with leading zeros to match GCS folder structure (e.g., '1' -> '001')\r\n      const paddedCid = cid.toString().padStart(3, '0');\r\n      console.log('Getting documents for padded CID:', paddedCid);\r\n      const response = await fetch(`${API_BASE_URL}/documents/${paddedCid}/all`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch documents');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.documents;\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get all document dates for a client\r\n  getDocumentDates: async (cid) => {\r\n    try {\r\n      // Pad CID with leading zeros to match GCS folder structure\r\n      const paddedCid = cid.toString().padStart(3, '0');\r\n      console.log('Getting document dates for padded CID:', paddedCid);\r\n      const response = await fetch(`${API_BASE_URL}/documents/${paddedCid}/dates`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch document dates');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.dates;\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get documents from specific date folder\r\n  getDocumentsByDate: async (cid, date) => {\r\n    try {\r\n      // Pad CID with leading zeros\r\n      const paddedCid = cid.toString().padStart(3, '0');\r\n      console.log('Getting documents for padded CID:', paddedCid, 'date:', date);\r\n      const response = await fetch(`${API_BASE_URL}/documents/${paddedCid}/date/${date}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch documents');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.documents;\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}