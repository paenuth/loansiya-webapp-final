{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=createContext({currentUser:null,setCurrentUser:function setCurrentUser(){},resetPassword:function resetPassword(){},logout:function logout(){}});export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(function(){var savedUser=localStorage.getItem('currentUser');return savedUser?JSON.parse(savedUser):null;}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];useEffect(function(){if(currentUser){localStorage.setItem('currentUser',JSON.stringify(currentUser));}else{localStorage.removeItem('currentUser');}},[currentUser]);var resetPassword=function(){var _ref2=_asyncToGenerator(function*(username,newPassword){if(!username||!newPassword){throw new Error('Username and new password are required');}return new Promise(function(resolve){setTimeout(function(){resolve({success:true,message:'Password reset successful'});},1000);});});return function resetPassword(_x,_x2){return _ref2.apply(this,arguments);};}();var logout=function logout(){setCurrentUser(null);};return _jsx(AuthContext.Provider,{value:{currentUser:currentUser,setCurrentUser:setCurrentUser,resetPassword:resetPassword,logout:logout},children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","jsx","_jsx","AuthContext","currentUser","setCurrentUser","resetPassword","logout","AuthProvider","_ref","children","_useState","savedUser","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","setItem","stringify","removeItem","_ref2","_asyncToGenerator","username","newPassword","Error","Promise","resolve","setTimeout","success","message","_x","_x2","apply","arguments","Provider","value"],"sources":["c:/Users/ajohn/loansiya-webapp1.3.4/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => {},\r\n  resetPassword: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    // Try to get saved user from localStorage on init\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  });\r\n\r\n  // Update localStorage whenever currentUser changes\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n    } else {\r\n      localStorage.removeItem('currentUser');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const resetPassword = async (username, newPassword) => {\r\n    // Validate inputs\r\n    if (!username || !newPassword) {\r\n      throw new Error('Username and new password are required');\r\n    }\r\n\r\n    // In a real app, this would make an API call to reset the password\r\n    // For now, we'll just simulate the process\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Simulate successful password reset\r\n        resolve({\r\n          success: true,\r\n          message: 'Password reset successful'\r\n        });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      currentUser,\r\n      setCurrentUser,\r\n      resetPassword,\r\n      logout,\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"wIAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3D,MAAO,IAAM,CAAAC,WAAW,CAAGL,aAAa,CAAC,CACvCM,WAAW,CAAE,IAAI,CACjBC,cAAc,CAAE,QAAhB,CAAAA,cAAcA,CAAA,CAAQ,CAAC,CAAC,CACxBC,aAAa,CAAE,QAAf,CAAAA,aAAaA,CAAA,CAAQ,CAAC,CAAC,CACvBC,MAAM,CAAE,QAAR,CAAAA,MAAMA,CAAA,CAAQ,CAAC,CACjB,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACrC,IAAAC,SAAA,CAAsCZ,QAAQ,CAAC,UAAM,CAEnD,GAAM,CAAAa,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACrD,MAAO,CAAAF,SAAS,CAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAG,IAAI,CACjD,CAAC,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAP,SAAA,IAJKP,WAAW,CAAAa,UAAA,IAAEZ,cAAc,CAAAY,UAAA,IAOlCjB,SAAS,CAAC,UAAM,CACd,GAAII,WAAW,CAAE,CACfS,YAAY,CAACM,OAAO,CAAC,aAAa,CAAEJ,IAAI,CAACK,SAAS,CAAChB,WAAW,CAAC,CAAC,CAClE,CAAC,IAAM,CACLS,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC,CACxC,CACF,CAAC,CAAE,CAACjB,WAAW,CAAC,CAAC,CAEjB,GAAM,CAAAE,aAAa,gBAAAgB,KAAA,CAAAC,iBAAA,CAAG,UAAOC,QAAQ,CAAEC,WAAW,CAAK,CAErD,GAAI,CAACD,QAAQ,EAAI,CAACC,WAAW,CAAE,CAC7B,KAAM,IAAI,CAAAC,KAAK,CAAC,wCAAwC,CAAC,CAC3D,CAIA,MAAO,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,CAAK,CAC9BC,UAAU,CAAC,UAAM,CAEfD,OAAO,CAAC,CACNE,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,2BACX,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACJ,CAAC,iBAjBK,CAAAzB,aAAaA,CAAA0B,EAAA,CAAAC,GAAA,SAAAX,KAAA,CAAAY,KAAA,MAAAC,SAAA,OAiBlB,CAED,GAAM,CAAA5B,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACnBF,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,MACE,CAAAH,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACC,KAAK,CAAE,CAC3BjC,WAAW,CAAXA,WAAW,CACXC,cAAc,CAAdA,cAAc,CACdC,aAAa,CAAbA,aAAa,CACbC,MAAM,CAANA,MACF,CAAE,CAAAG,QAAA,CACCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}