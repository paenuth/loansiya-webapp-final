{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{createContext,useState,useContext,useEffect}from'react';import{clientAPI}from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";var LoanContext=createContext();var POLLING_INTERVAL=30000;export function LoanProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loans=_useState2[0],setLoans=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),notifications=_useState4[0],setNotifications=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),unreadCount=_useState6[0],setUnreadCount=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState(null),_useState0=_slicedToArray(_useState9,2),error=_useState0[0],setError=_useState0[1];useEffect(function(){fetchClients();},[]);useEffect(function(){fetchNotifications();var interval=setInterval(function(){fetchNotifications();},POLLING_INTERVAL);return function(){return clearInterval(interval);};},[]);var fetchClients=function(){var _ref2=_asyncToGenerator(function*(){try{setLoading(true);setError(null);var clientData=yield clientAPI.getAllClients();setLoans(clientData);}catch(err){setError(\"Failed to fetch clients: \"+err.message);}finally{setLoading(false);}});return function fetchClients(){return _ref2.apply(this,arguments);};}();var refreshClientData=function(){var _ref3=_asyncToGenerator(function*(cid){try{var updatedClient=yield clientAPI.getClientById(cid);setLoans(function(prevLoans){return prevLoans.map(function(loan){return loan.cid===cid?updatedClient:loan;});});return updatedClient;}catch(err){setError(\"Failed to refresh client: \"+err.message);throw err;}});return function refreshClientData(_x){return _ref3.apply(this,arguments);};}();var fetchNotifications=function(){var _ref4=_asyncToGenerator(function*(){try{var response=yield clientAPI.notifications.getNotifications();setNotifications(response);setUnreadCount(response.filter(function(n){return!n.read;}).length);}catch(err){console.error('Failed to fetch notifications:',err);}});return function fetchNotifications(){return _ref4.apply(this,arguments);};}();var addNotification=function(){var _ref5=_asyncToGenerator(function*(notification){try{yield clientAPI.notifications.createNotification(_objectSpread({timestamp:new Date().toISOString(),read:false},notification));yield fetchNotifications();}catch(err){console.error('Failed to create notification:',err);}});return function addNotification(_x2){return _ref5.apply(this,arguments);};}();var markNotificationsAsRead=function(){var _ref6=_asyncToGenerator(function*(){try{var unreadIds=notifications.filter(function(n){return!n.read;}).map(function(n){return n.id;});if(unreadIds.length>0){yield clientAPI.notifications.markAsRead(unreadIds);yield fetchNotifications();}}catch(err){console.error('Failed to mark notifications as read:',err);}});return function markNotificationsAsRead(){return _ref6.apply(this,arguments);};}();var clearNotifications=function clearNotifications(){setNotifications([]);setUnreadCount(0);};var updateLoan=function(){var _ref7=_asyncToGenerator(function*(cid,updates){try{var loan=loans.find(function(l){return l.cid===cid;});if(!loan){throw new Error(\"Loan not found for CID: \"+cid);}setLoans(function(prevLoans){return prevLoans.map(function(l){return l.cid===cid?_objectSpread(_objectSpread({},l),updates):l;});});if(updates.status==='Approved'||updates.status==='Declined'){yield addNotification({cid:cid,clientName:loan.name,type:'status_change',status:updates.status,message:\"Loan request for client \"+loan.name+\" has been \"+updates.status.toLowerCase()+\" by Operations Manager\",recipientRole:'loan_officer'});}var updatedClient=yield refreshClientData(cid);return updatedClient;}catch(err){console.error('Failed to update loan:',err);throw err;}});return function updateLoan(_x3,_x4){return _ref7.apply(this,arguments);};}();var updateLoanAmount=function(){var _ref8=_asyncToGenerator(function*(cid,newAmount){try{var targetLoan=loans.find(function(l){return l.cid===cid;});if(!targetLoan)throw new Error('Client not found');yield clientAPI.updateLoanAmount(cid,newAmount);setLoans(function(prevLoans){return prevLoans.map(function(loan){if(loan.cid===cid){var updatedHistory=_toConsumableArray(loan.loans.loanHistory);var latestRequestIndex=updatedHistory.findIndex(function(loan,_,arr){return new Date(loan.dateApplied).getTime()===Math.max.apply(Math,_toConsumableArray(arr.map(function(l){return new Date(l.dateApplied).getTime();})));});if(latestRequestIndex!==-1){updatedHistory[latestRequestIndex]=_objectSpread(_objectSpread({},updatedHistory[latestRequestIndex]),{},{amount:newAmount,decidedAt:new Date().toISOString()});}return _objectSpread(_objectSpread({},loan),{},{loans:_objectSpread(_objectSpread({},loan.loans),{},{loanHistory:updatedHistory})});}return loan;});});yield addNotification({cid:cid,clientName:targetLoan.name,type:'amount_change',amount:newAmount,message:\"Loan amount for client \"+targetLoan.name+\" has been updated to \\u20B1\"+newAmount.toLocaleString()+\" by Operations Manager\",recipientRole:'loan_officer'});return yield refreshClientData(cid);}catch(err){console.error('Failed to update loan amount:',err);throw err;}});return function updateLoanAmount(_x5,_x6){return _ref8.apply(this,arguments);};}();return _jsx(LoanContext.Provider,{value:{loans:loans,loading:loading,error:error,updateLoan:updateLoan,updateLoanAmount:updateLoanAmount,refreshClientData:refreshClientData,notifications:notifications,unreadCount:unreadCount,markNotificationsAsRead:markNotificationsAsRead,clearNotifications:clearNotifications,fetchNotifications:fetchNotifications},children:children});}export function useLoan(){var context=useContext(LoanContext);if(!context){throw new Error('useLoan must be used within a LoanProvider');}return context;}","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","clientAPI","jsx","_jsx","LoanContext","POLLING_INTERVAL","LoanProvider","_ref","children","_useState","_useState2","_slicedToArray","loans","setLoans","_useState3","_useState4","notifications","setNotifications","_useState5","_useState6","unreadCount","setUnreadCount","_useState7","_useState8","loading","setLoading","_useState9","_useState0","error","setError","fetchClients","fetchNotifications","interval","setInterval","clearInterval","_ref2","_asyncToGenerator","clientData","getAllClients","err","message","apply","arguments","refreshClientData","_ref3","cid","updatedClient","getClientById","prevLoans","map","loan","_x","_ref4","response","getNotifications","filter","n","read","length","console","addNotification","_ref5","notification","createNotification","_objectSpread","timestamp","Date","toISOString","_x2","markNotificationsAsRead","_ref6","unreadIds","id","markAsRead","clearNotifications","updateLoan","_ref7","updates","find","l","Error","status","clientName","name","type","toLowerCase","recipientRole","_x3","_x4","updateLoanAmount","_ref8","newAmount","targetLoan","updatedHistory","_toConsumableArray","loanHistory","latestRequestIndex","findIndex","_","arr","dateApplied","getTime","Math","max","amount","decidedAt","toLocaleString","_x5","_x6","Provider","value","useLoan","context"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/contexts/LoanContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { clientAPI } from '../services/api';\r\n\r\nconst LoanContext = createContext();\r\n\r\nconst POLLING_INTERVAL = 30000; // 30 seconds\r\n\r\nexport function LoanProvider({ children }) {\r\n  const [loans, setLoans] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch clients when component mounts\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // Set up polling for notifications\r\n  useEffect(() => {\r\n    fetchNotifications(); // Initial fetch\r\n\r\n    const interval = setInterval(() => {\r\n      fetchNotifications();\r\n    }, POLLING_INTERVAL);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const clientData = await clientAPI.getAllClients();\r\n      setLoans(clientData);\r\n    } catch (err) {\r\n      setError(`Failed to fetch clients: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshClientData = async (cid) => {\r\n    try {\r\n      const updatedClient = await clientAPI.getClientById(cid);\r\n      setLoans(prevLoans =>\r\n        prevLoans.map(loan =>\r\n          loan.cid === cid ? updatedClient : loan\r\n        )\r\n      );\r\n      return updatedClient;\r\n    } catch (err) {\r\n      setError(`Failed to refresh client: ${err.message}`);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Fetch notifications from the server\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await clientAPI.notifications.getNotifications();\r\n      setNotifications(response);\r\n      setUnreadCount(response.filter(n => !n.read).length);\r\n    } catch (err) {\r\n      console.error('Failed to fetch notifications:', err);\r\n    }\r\n  };\r\n\r\n  const addNotification = async (notification) => {\r\n    try {\r\n      await clientAPI.notifications.createNotification({\r\n        timestamp: new Date().toISOString(),\r\n        read: false,\r\n        ...notification\r\n      });\r\n      await fetchNotifications(); // Refresh notifications\r\n    } catch (err) {\r\n      console.error('Failed to create notification:', err);\r\n    }\r\n  };\r\n\r\n  const markNotificationsAsRead = async () => {\r\n    try {\r\n      const unreadIds = notifications.filter(n => !n.read).map(n => n.id);\r\n      if (unreadIds.length > 0) {\r\n        await clientAPI.notifications.markAsRead(unreadIds);\r\n        await fetchNotifications(); // Refresh notifications\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to mark notifications as read:', err);\r\n    }\r\n  };\r\n\r\n  const clearNotifications = () => {\r\n    // Note: This is now just a visual clear, as we're keeping notifications in the backend\r\n    setNotifications([]);\r\n    setUnreadCount(0);\r\n  };\r\n\r\n  const updateLoan = async (cid, updates) => {\r\n    try {\r\n      const loan = loans.find(l => l.cid === cid);\r\n      if (!loan) {\r\n        throw new Error(`Loan not found for CID: ${cid}`);\r\n      }\r\n\r\n      // Update local state\r\n      setLoans(prevLoans =>\r\n        prevLoans.map(l =>\r\n          l.cid === cid\r\n            ? { ...l, ...updates }\r\n            : l\r\n        )\r\n      );\r\n\r\n      // Create notification in backend if status changed\r\n      if (updates.status === 'Approved' || updates.status === 'Declined') {\r\n        await addNotification({\r\n          cid,\r\n          clientName: loan.name,\r\n          type: 'status_change',\r\n          status: updates.status,\r\n          message: `Loan request for client ${loan.name} has been ${updates.status.toLowerCase()} by Operations Manager`,\r\n          recipientRole: 'loan_officer' // Specify that this is for loan officers\r\n        });\r\n      }\r\n\r\n      // Refresh client data to ensure consistency\r\n      const updatedClient = await refreshClientData(cid);\r\n      return updatedClient;\r\n    } catch (err) {\r\n      console.error('Failed to update loan:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const updateLoanAmount = async (cid, newAmount) => {\r\n    try {\r\n      const targetLoan = loans.find(l => l.cid === cid);\r\n      if (!targetLoan) throw new Error('Client not found');\r\n\r\n      // Update amount in the API\r\n      await clientAPI.updateLoanAmount(cid, newAmount);\r\n\r\n      // Update local state after API success\r\n      setLoans(prevLoans =>\r\n        prevLoans.map(loan => {\r\n          if (loan.cid === cid) {\r\n            const updatedHistory = [...loan.loans.loanHistory];\r\n            const latestRequestIndex = updatedHistory.findIndex(\r\n              (loan, _, arr) =>\r\n                new Date(loan.dateApplied).getTime() ===\r\n                Math.max(...arr.map(l => new Date(l.dateApplied).getTime()))\r\n            );\r\n\r\n            if (latestRequestIndex !== -1) {\r\n              updatedHistory[latestRequestIndex] = {\r\n                ...updatedHistory[latestRequestIndex],\r\n                amount: newAmount,\r\n                decidedAt: new Date().toISOString()\r\n              };\r\n            }\r\n\r\n            return {\r\n              ...loan,\r\n              loans: {\r\n                ...loan.loans,\r\n                loanHistory: updatedHistory\r\n              }\r\n            };\r\n          }\r\n          return loan;\r\n        })\r\n      );\r\n\r\n      // Create notification in backend\r\n      await addNotification({\r\n        cid,\r\n        clientName: targetLoan.name,\r\n        type: 'amount_change',\r\n        amount: newAmount,\r\n        message: `Loan amount for client ${targetLoan.name} has been updated to ₱${newAmount.toLocaleString()} by Operations Manager`,\r\n        recipientRole: 'loan_officer'\r\n      });\r\n\r\n      return await refreshClientData(cid);\r\n    } catch (err) {\r\n      console.error('Failed to update loan amount:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoanContext.Provider value={{\r\n      loans,\r\n      loading,\r\n      error,\r\n      updateLoan,\r\n      updateLoanAmount,\r\n      refreshClientData,\r\n      notifications,\r\n      unreadCount,\r\n      markNotificationsAsRead,\r\n      clearNotifications,\r\n      fetchNotifications // Export this so components can manually refresh if needed\r\n    }}>\r\n      {children}\r\n    </LoanContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useLoan() {\r\n  const context = useContext(LoanContext);\r\n  if (!context) {\r\n    throw new Error('useLoan must be used within a LoanProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}