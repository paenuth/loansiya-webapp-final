{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { clientAPI } from \"../../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TopBar(_ref) {\n  var navigation = _ref.navigation,\n    role = _ref.role,\n    showNotifications = _ref.showNotifications,\n    unreadCount = _ref.unreadCount,\n    _ref$notificationScre = _ref.notificationScreen,\n    notificationScreen = _ref$notificationScre === void 0 ? 'LoanOfficerNotifications' : _ref$notificationScre,\n    onNotificationRead = _ref.onNotificationRead;\n  var _useContext = useContext(AuthContext),\n    logout = _useContext.logout;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var handleNotificationPress = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (unreadCount > 0) {\n        try {\n          var userRole = notificationScreen === 'OpsNotifications' ? 'ops_manager' : 'loan_officer';\n          var notifications = yield clientAPI.notifications.getNotifications(userRole);\n          var unreadIds = notifications.filter(function (n) {\n            return !n.read;\n          }).map(function (n) {\n            return n.id;\n          });\n          if (unreadIds.length > 0) {\n            yield clientAPI.notifications.markAsRead(unreadIds, userRole);\n            if (onNotificationRead) {\n              onNotificationRead();\n            }\n          }\n        } catch (error) {\n          console.error('Failed to auto-mark notifications as read:', error);\n        }\n      }\n      navigation.navigate(notificationScreen);\n    });\n    return function handleNotificationPress() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.topbar,\n    children: [_jsxs(View, {\n      style: [styles.leftSection, isMobile && styles.leftSectionMobile],\n      children: [_jsxs(Text, {\n        style: [styles.brand, isMobile && styles.brandMobile],\n        children: [_jsx(Text, {\n          style: {\n            color: '#0066ff'\n          },\n          children: \"Loan\"\n        }), \"Siya\"]\n      }), !isMobile && _jsx(Text, {\n        style: styles.title,\n        children: \"Dashboard\"\n      })]\n    }), _jsxs(View, {\n      style: [styles.rightSection, isMobile && styles.rightSectionMobile],\n      children: [_jsx(Text, {\n        style: [styles.role, isMobile && styles.roleMobile],\n        children: role\n      }), showNotifications && _jsxs(TouchableOpacity, {\n        style: styles.notificationContainer,\n        onPress: handleNotificationPress,\n        children: [_jsx(Text, {\n          style: [styles.icon, isMobile && styles.iconMobile],\n          children: \"\\uD83D\\uDD14\"\n        }), unreadCount > 0 && _jsx(View, {\n          style: styles.badge,\n          children: _jsx(Text, {\n            style: styles.badgeText,\n            children: unreadCount\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          logout();\n          navigation.replace('Login');\n        },\n        style: [styles.logoutButton, isMobile && styles.logoutButtonMobile],\n        children: _jsx(Text, {\n          style: [styles.logout, isMobile && styles.logoutMobile],\n          children: \"Logout\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  topbar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: Platform.select({\n      web: '5%',\n      default: 16\n    }),\n    paddingVertical: Platform.select({\n      web: 15,\n      default: 12\n    }),\n    backgroundColor: '#ddd',\n    alignItems: 'center',\n    width: '100%'\n  },\n  leftSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 20\n  },\n  leftSectionMobile: {\n    gap: 10\n  },\n  rightSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 15\n  },\n  rightSectionMobile: {\n    gap: 8\n  },\n  brand: {\n    fontSize: Platform.select({\n      web: 22,\n      default: 18\n    }),\n    fontWeight: 'bold'\n  },\n  brandMobile: {\n    fontSize: 16\n  },\n  title: {\n    fontSize: Platform.select({\n      web: 20,\n      default: 16\n    }),\n    fontWeight: '500'\n  },\n  role: {\n    fontSize: 16\n  },\n  roleMobile: {\n    fontSize: 12\n  },\n  logoutButton: {\n    padding: Platform.select({\n      web: 8,\n      default: 12\n    }),\n    backgroundColor: '#f0f0f0',\n    borderRadius: 6,\n    minWidth: Platform.select({\n      web: 80,\n      default: 70\n    })\n  },\n  logoutButtonMobile: {\n    padding: 10,\n    minWidth: 60\n  },\n  logout: {\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center'\n  },\n  logoutMobile: {\n    fontSize: 14\n  },\n  notificationContainer: {\n    position: 'relative',\n    padding: Platform.select({\n      web: 8,\n      default: 12\n    })\n  },\n  icon: {\n    fontSize: Platform.select({\n      web: 18,\n      default: 20\n    })\n  },\n  iconMobile: {\n    fontSize: 16\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: '#e74c3c',\n    borderRadius: 10,\n    minWidth: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 2\n  },\n  badgeText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useContext","View","Text","TouchableOpacity","StyleSheet","useWindowDimensions","Platform","AuthContext","clientAPI","jsx","_jsx","jsxs","_jsxs","TopBar","_ref","navigation","role","showNotifications","unreadCount","_ref$notificationScre","notificationScreen","onNotificationRead","_useContext","logout","_useWindowDimensions","width","isMobile","handleNotificationPress","_ref2","_asyncToGenerator","userRole","notifications","getNotifications","unreadIds","filter","n","read","map","id","length","markAsRead","error","console","navigate","apply","arguments","style","styles","topbar","children","leftSection","leftSectionMobile","brand","brandMobile","color","title","rightSection","rightSectionMobile","roleMobile","notificationContainer","onPress","icon","iconMobile","badge","badgeText","replace","logoutButton","logoutButtonMobile","logoutMobile","create","flexDirection","justifyContent","paddingHorizontal","select","web","default","paddingVertical","backgroundColor","alignItems","gap","fontSize","fontWeight","padding","borderRadius","minWidth","textAlign","position","top","right","height"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/components/common/TopBar.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, useWindowDimensions, Platform } from 'react-native';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport { clientAPI } from '../../services/api';\r\n\r\nexport default function TopBar({ navigation, role, showNotifications, unreadCount, notificationScreen = 'LoanOfficerNotifications', onNotificationRead }) {\r\n  const { logout } = useContext(AuthContext);\r\n  const { width } = useWindowDimensions();\r\n  const isMobile = width < 768;\r\n\r\n  const handleNotificationPress = async () => {\r\n    // Auto-mark all notifications as read when bell is clicked\r\n    if (unreadCount > 0) {\r\n      try {\r\n        // Determine the role based on the notification screen\r\n        const userRole = notificationScreen === 'OpsNotifications' ? 'ops_manager' : 'loan_officer';\r\n        \r\n        // Get all notifications to find unread ones\r\n        const notifications = await clientAPI.notifications.getNotifications(userRole);\r\n        const unreadIds = notifications.filter(n => !n.read).map(n => n.id);\r\n        \r\n        if (unreadIds.length > 0) {\r\n          await clientAPI.notifications.markAsRead(unreadIds, userRole);\r\n          // Notify parent component to update unread count\r\n          if (onNotificationRead) {\r\n            onNotificationRead();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to auto-mark notifications as read:', error);\r\n      }\r\n    }\r\n    \r\n    // Navigate to notifications screen\r\n    navigation.navigate(notificationScreen);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.topbar}>\r\n      <View style={[styles.leftSection, isMobile && styles.leftSectionMobile]}>\r\n        <Text style={[styles.brand, isMobile && styles.brandMobile]}>\r\n          <Text style={{ color: '#0066ff' }}>Loan</Text>Siya\r\n        </Text>\r\n        {!isMobile && <Text style={styles.title}>Dashboard</Text>}\r\n      </View>\r\n      <View style={[styles.rightSection, isMobile && styles.rightSectionMobile]}>\r\n        <Text style={[styles.role, isMobile && styles.roleMobile]}>{role}</Text>\r\n        {showNotifications && (\r\n          <TouchableOpacity\r\n            style={styles.notificationContainer}\r\n            onPress={handleNotificationPress}\r\n          >\r\n            <Text style={[styles.icon, isMobile && styles.iconMobile]}>ðŸ””</Text>\r\n            {unreadCount > 0 && (\r\n              <View style={styles.badge}>\r\n                <Text style={styles.badgeText}>{unreadCount}</Text>\r\n              </View>\r\n            )}\r\n          </TouchableOpacity>\r\n        )}\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            logout();\r\n            navigation.replace('Login');\r\n          }}\r\n          style={[styles.logoutButton, isMobile && styles.logoutButtonMobile]}\r\n        >\r\n          <Text style={[styles.logout, isMobile && styles.logoutMobile]}>Logout</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  topbar: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: Platform.select({ web: '5%', default: 16 }),\r\n    paddingVertical: Platform.select({ web: 15, default: 12 }),\r\n    backgroundColor: '#ddd',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  leftSection: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 20,\r\n  },\r\n  leftSectionMobile: {\r\n    gap: 10,\r\n  },\r\n  rightSection: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 15,\r\n  },\r\n  rightSectionMobile: {\r\n    gap: 8,\r\n  },\r\n  brand: {\r\n    fontSize: Platform.select({ web: 22, default: 18 }),\r\n    fontWeight: 'bold',\r\n  },\r\n  brandMobile: {\r\n    fontSize: 16,\r\n  },\r\n  title: {\r\n    fontSize: Platform.select({ web: 20, default: 16 }),\r\n    fontWeight: '500',\r\n  },\r\n  role: {\r\n    fontSize: 16,\r\n  },\r\n  roleMobile: {\r\n    fontSize: 12,\r\n  },\r\n  logoutButton: {\r\n    padding: Platform.select({ web: 8, default: 12 }),\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 6,\r\n    minWidth: Platform.select({ web: 80, default: 70 }),\r\n  },\r\n  logoutButtonMobile: {\r\n    padding: 10,\r\n    minWidth: 60,\r\n  },\r\n  logout: {\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    textAlign: 'center',\r\n  },\r\n  logoutMobile: {\r\n    fontSize: 14,\r\n  },\r\n  notificationContainer: {\r\n    position: 'relative',\r\n    padding: Platform.select({ web: 8, default: 12 }),\r\n  },\r\n  icon: {\r\n    fontSize: Platform.select({ web: 18, default: 20 }),\r\n  },\r\n  iconMobile: {\r\n    fontSize: 16,\r\n  },\r\n  badge: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: '#e74c3c',\r\n    borderRadius: 10,\r\n    minWidth: 20,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 2,\r\n  },\r\n  badgeText: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}