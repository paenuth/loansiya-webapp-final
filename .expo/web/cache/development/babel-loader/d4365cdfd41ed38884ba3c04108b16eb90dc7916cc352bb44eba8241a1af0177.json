{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var UsersContext = createContext({\n  users: [],\n  addUser: function addUser(user) {},\n  updateUser: function updateUser(user) {}\n});\nexport var UsersProvider = function UsersProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var addUser = function addUser(user) {\n    var newUser = {\n      username: user.username,\n      fullName: user.fullName,\n      role: user.role,\n      status: user.status || 'Active',\n      password: user.password\n    };\n    var existingUsername = users.find(function (u) {\n      return u.username.toLowerCase() === newUser.username.toLowerCase();\n    });\n    if (existingUsername) {\n      throw new Error('Username already exists');\n      return;\n    }\n    var existingNameAndRole = users.find(function (u) {\n      return u.fullName.toLowerCase() === newUser.fullName.toLowerCase() && u.role === newUser.role;\n    });\n    if (existingNameAndRole) {\n      throw new Error('A user with this name and role already exists');\n      return;\n    }\n    setUsers([].concat(_toConsumableArray(users), [_objectSpread(_objectSpread(_objectSpread({}, newUser), user), {}, {\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString()\n    })]));\n  };\n  var updateUser = function updateUser(updatedUser) {\n    if (!updatedUser.id) {\n      throw new Error('User ID is required for updating');\n    }\n    var targetUser = users.find(function (u) {\n      return u.id === updatedUser.id;\n    });\n    if (!targetUser) {\n      throw new Error('User not found');\n    }\n    var cleanUpdatedUser = _objectSpread(_objectSpread(_objectSpread({}, targetUser), updatedUser), {}, {\n      id: targetUser.id\n    });\n    if (cleanUpdatedUser.username !== targetUser.username) {\n      var existingUser = users.find(function (u) {\n        return u.id !== targetUser.id && u.username.toLowerCase() === cleanUpdatedUser.username.toLowerCase();\n      });\n      if (existingUser) {\n        throw new Error('Username already exists');\n      }\n    }\n    if (cleanUpdatedUser.fullName !== targetUser.fullName || cleanUpdatedUser.role !== targetUser.role) {\n      var existingNameAndRole = users.find(function (u) {\n        return u.id !== targetUser.id && u.fullName.toLowerCase() === cleanUpdatedUser.fullName.toLowerCase() && u.role === cleanUpdatedUser.role;\n      });\n      if (existingNameAndRole) {\n        throw new Error('A user with this name and role already exists');\n      }\n    }\n    setUsers(users.map(function (user) {\n      if (user.id === targetUser.id) {\n        return _objectSpread(_objectSpread({}, cleanUpdatedUser), {}, {\n          updatedAt: new Date().toISOString()\n        });\n      }\n      return user;\n    }));\n  };\n  return _jsx(UsersContext.Provider, {\n    value: {\n      users: users,\n      addUser: addUser,\n      updateUser: updateUser\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","UsersContext","users","addUser","user","updateUser","UsersProvider","_ref","children","_useState","_useState2","_slicedToArray","setUsers","newUser","username","fullName","role","status","password","existingUsername","find","u","toLowerCase","Error","existingNameAndRole","concat","_toConsumableArray","_objectSpread","id","Date","now","toString","createdAt","toISOString","updatedUser","targetUser","cleanUpdatedUser","existingUser","map","updatedAt","Provider","value"],"sources":["C:/Users/ajohn/loansiya-webapp1.1.0/src/contexts/UsersContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const UsersContext = createContext({\r\n  users: [],\r\n  addUser: (user) => {},\r\n  updateUser: (user) => {},\r\n});\r\n\r\nexport const UsersProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const addUser = (user) => {\r\n    // Create a clean user object without any references\r\n    const newUser = {\r\n      username: user.username,\r\n      fullName: user.fullName,\r\n      role: user.role,\r\n      status: user.status || 'Active',\r\n      password: user.password\r\n    };\r\n\r\n    // Check if username already exists\r\n    const existingUsername = users.find(u => u.username.toLowerCase() === newUser.username.toLowerCase());\r\n    if (existingUsername) {\r\n      throw new Error('Username already exists');\r\n      return;\r\n    }\r\n\r\n    // Check if user with same name and role exists\r\n    const existingNameAndRole = users.find(\r\n      u => u.fullName.toLowerCase() === newUser.fullName.toLowerCase() &&\r\n          u.role === newUser.role\r\n    );\r\n    if (existingNameAndRole) {\r\n      throw new Error('A user with this name and role already exists');\r\n      return;\r\n    }\r\n\r\n    setUsers([...users, {\r\n      ...newUser,\r\n      ...user,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date().toISOString()\r\n    }]);\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    if (!updatedUser.id) {\r\n      throw new Error('User ID is required for updating');\r\n    }\r\n    \r\n    // Find the target user by ID\r\n    const targetUser = users.find(u => u.id === updatedUser.id);\r\n    if (!targetUser) {\r\n      throw new Error('User not found');\r\n    }\r\n\r\n    // Create a clean updated user object\r\n    const cleanUpdatedUser = {\r\n      ...targetUser, // Start with existing user data\r\n      ...updatedUser, // Apply updates\r\n      id: targetUser.id // Ensure ID remains unchanged\r\n    };\r\n\r\n    // Only check for username duplicates if username is being changed\r\n    if (cleanUpdatedUser.username !== targetUser.username) {\r\n      const existingUser = users.find(u =>\r\n        u.id !== targetUser.id &&\r\n        u.username.toLowerCase() === cleanUpdatedUser.username.toLowerCase()\r\n      );\r\n      if (existingUser) {\r\n        throw new Error('Username already exists');\r\n      }\r\n    }\r\n\r\n    // Check for duplicate name and role if those fields are being changed\r\n    if (cleanUpdatedUser.fullName !== targetUser.fullName ||\r\n        cleanUpdatedUser.role !== targetUser.role) {\r\n      const existingNameAndRole = users.find(u =>\r\n        u.id !== targetUser.id &&\r\n        u.fullName.toLowerCase() === cleanUpdatedUser.fullName.toLowerCase() &&\r\n        u.role === cleanUpdatedUser.role\r\n      );\r\n      if (existingNameAndRole) {\r\n        throw new Error('A user with this name and role already exists');\r\n      }\r\n    }\r\n\r\n    // Update the specific user only with the clean object\r\n    setUsers(users.map(user => {\r\n      if (user.id === targetUser.id) {\r\n        return {\r\n          ...cleanUpdatedUser,\r\n          updatedAt: new Date().toISOString()\r\n        };\r\n      }\r\n      return user;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider value={{\r\n      users,\r\n      addUser,\r\n      updateUser,\r\n    }}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}