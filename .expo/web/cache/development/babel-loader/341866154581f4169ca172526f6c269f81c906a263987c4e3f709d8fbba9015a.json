{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { userAPI } from \"../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var UsersContext = createContext({\n  users: [],\n  loading: false,\n  addUser: function addUser(user) {},\n  updateUser: function updateUser(user) {},\n  refreshUsers: function refreshUsers() {}\n});\nexport var UsersProvider = function UsersProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var refreshUsers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var fetchedUsers = yield userAPI.getAllUsers();\n        setUsers(fetchedUsers);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function refreshUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    refreshUsers();\n  }, []);\n  var addUser = function () {\n    var _ref3 = _asyncToGenerator(function* (user) {\n      try {\n        if (!user.username || !user.fullName || !user.role || !user.password) {\n          throw new Error('Username, full name, role, and password are required');\n        }\n        setLoading(true);\n        var response = yield userAPI.addUser(user);\n        yield refreshUsers();\n        return response.user;\n      } catch (error) {\n        console.error('Error adding user:', error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function addUser(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var updateUser = function () {\n    var _ref4 = _asyncToGenerator(function* (updatedUser) {\n      try {\n        if (!updatedUser.id && !updatedUser.username) {\n          throw new Error('User ID or username is required for updating');\n        }\n        var username = updatedUser.username || updatedUser.id;\n        setLoading(true);\n        if (Object.keys(updatedUser).length === 2 && updatedUser.status) {\n          yield userAPI.updateUserStatus(username, updatedUser.status);\n        } else {\n          var updateData = {};\n          if (updatedUser.fullName) updateData.fullName = updatedUser.fullName;\n          if (updatedUser.role) updateData.role = updatedUser.role;\n          if (updatedUser.status) updateData.status = updatedUser.status;\n          if (updatedUser.password) updateData.password = updatedUser.password;\n          yield userAPI.updateUser(username, updateData);\n        }\n        yield refreshUsers();\n      } catch (error) {\n        console.error('Error updating user:', error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateUser(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(UsersContext.Provider, {\n    value: {\n      users: users,\n      loading: loading,\n      addUser: addUser,\n      updateUser: updateUser,\n      refreshUsers: refreshUsers\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","userAPI","jsx","_jsx","UsersContext","users","loading","addUser","user","updateUser","refreshUsers","UsersProvider","_ref","children","_useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","setLoading","_ref2","_asyncToGenerator","fetchedUsers","getAllUsers","error","console","apply","arguments","_ref3","username","fullName","role","password","Error","response","_x","_ref4","updatedUser","id","Object","keys","length","status","updateUserStatus","updateData","_x2","Provider","value"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/contexts/UsersContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { userAPI } from '../services/api';\r\n\r\nexport const UsersContext = createContext({\r\n  users: [],\r\n  loading: false,\r\n  addUser: (user) => {},\r\n  updateUser: (user) => {},\r\n  refreshUsers: () => {},\r\n});\r\n\r\nexport const UsersProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch users from GCS on component mount\r\n  const refreshUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const fetchedUsers = await userAPI.getAllUsers();\r\n      setUsers(fetchedUsers);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      // Keep existing users if fetch fails\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshUsers();\r\n  }, []);\r\n\r\n  const addUser = async (user) => {\r\n    try {\r\n      // Validate required fields\r\n      if (!user.username || !user.fullName || !user.role || !user.password) {\r\n        throw new Error('Username, full name, role, and password are required');\r\n      }\r\n\r\n      setLoading(true);\r\n      const response = await userAPI.addUser(user);\r\n      \r\n      // Refresh users list to get updated data from GCS\r\n      await refreshUsers();\r\n      \r\n      return response.user;\r\n    } catch (error) {\r\n      console.error('Error adding user:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (updatedUser) => {\r\n    try {\r\n      if (!updatedUser.id && !updatedUser.username) {\r\n        throw new Error('User ID or username is required for updating');\r\n      }\r\n      \r\n      const username = updatedUser.username || updatedUser.id;\r\n      \r\n      setLoading(true);\r\n\r\n      // For simple status updates\r\n      if (Object.keys(updatedUser).length === 2 && updatedUser.status) {\r\n        await userAPI.updateUserStatus(username, updatedUser.status);\r\n      } else {\r\n        // For full user updates\r\n        const updateData = {};\r\n        if (updatedUser.fullName) updateData.fullName = updatedUser.fullName;\r\n        if (updatedUser.role) updateData.role = updatedUser.role;\r\n        if (updatedUser.status) updateData.status = updatedUser.status;\r\n        if (updatedUser.password) updateData.password = updatedUser.password;\r\n        \r\n        await userAPI.updateUser(username, updateData);\r\n      }\r\n      \r\n      // Refresh users list to get updated data from GCS\r\n      await refreshUsers();\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider value={{\r\n      users,\r\n      loading,\r\n      addUser,\r\n      updateUser,\r\n      refreshUsers,\r\n    }}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}