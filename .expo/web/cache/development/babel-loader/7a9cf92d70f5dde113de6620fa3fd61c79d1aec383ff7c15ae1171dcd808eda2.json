{"ast":null,"code":"export var formatDateForDisplay = function formatDateForDisplay(dateString) {\n  var date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\nexport var calculateDueDate = function calculateDueDate(dateApplied, termMonths) {\n  var repaymentMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'monthly';\n  if (!dateApplied || !termMonths) return 'N/A';\n  var startDate = new Date(dateApplied);\n  if (repaymentMethod.toLowerCase() === 'daily') {\n    var totalDays = termMonths * 30;\n    var dueDate = new Date(startDate);\n    dueDate.setDate(dueDate.getDate() + totalDays);\n    return dueDate.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  } else if (repaymentMethod.toLowerCase() === 'weekly') {\n    var totalWeeks = Math.ceil(termMonths * 4.33);\n    var _dueDate = new Date(startDate);\n    _dueDate.setDate(_dueDate.getDate() + totalWeeks * 7);\n    return _dueDate.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  } else {\n    var _dueDate2 = new Date(startDate);\n    _dueDate2.setMonth(_dueDate2.getMonth() + parseInt(termMonths));\n    return _dueDate2.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  }\n};\nexport var getNextDay = function getNextDay(currentDate) {\n  var date = new Date(currentDate);\n  date.setDate(date.getDate() + 1);\n  return date.toLocaleDateString('en-US', {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};","map":{"version":3,"names":["formatDateForDisplay","dateString","date","Date","toLocaleDateString","year","month","day","calculateDueDate","dateApplied","termMonths","repaymentMethod","arguments","length","undefined","startDate","toLowerCase","totalDays","dueDate","setDate","getDate","totalWeeks","Math","ceil","setMonth","getMonth","parseInt","getNextDay","currentDate"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/utils/dateFormatters.js"],"sourcesContent":["export const formatDateForDisplay = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\n// Helper function to calculate due date based on loan terms\r\nexport const calculateDueDate = (dateApplied, termMonths, repaymentMethod = 'monthly') => {\r\n  if (!dateApplied || !termMonths) return 'N/A';\r\n  \r\n  const startDate = new Date(dateApplied);\r\n  \r\n  if (repaymentMethod.toLowerCase() === 'daily') {\r\n    // For daily payments: start date + (term * 30) days\r\n    const totalDays = termMonths * 30;\r\n    const dueDate = new Date(startDate);\r\n    dueDate.setDate(dueDate.getDate() + totalDays);\r\n    \r\n    return dueDate.toLocaleDateString('en-US', {\r\n      month: 'long',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  } else if (repaymentMethod.toLowerCase() === 'weekly') {\r\n    // For weekly payments: start date + (term * 4.33) weeks\r\n    const totalWeeks = Math.ceil(termMonths * 4.33);\r\n    const dueDate = new Date(startDate);\r\n    dueDate.setDate(dueDate.getDate() + (totalWeeks * 7));\r\n    \r\n    return dueDate.toLocaleDateString('en-US', {\r\n      month: 'long', \r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  } else {\r\n    // For monthly payments: start date + term months\r\n    const dueDate = new Date(startDate);\r\n    dueDate.setMonth(dueDate.getMonth() + parseInt(termMonths));\r\n    \r\n    return dueDate.toLocaleDateString('en-US', {\r\n      month: 'long',\r\n      day: 'numeric', \r\n      year: 'numeric'\r\n    });\r\n  }\r\n};\r\n\r\n// Helper function to get next day's date (for first payment)\r\nexport const getNextDay = (currentDate) => {\r\n  const date = new Date(currentDate);\r\n  date.setDate(date.getDate() + 1);\r\n  return date.toLocaleDateString('en-US', {\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric'\r\n  });\r\n};"],"mappings":"AAAA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,UAAU,EAAK;EAClD,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ,CAAC;AAGD,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,WAAW,EAAEC,UAAU,EAAkC;EAAA,IAAhCC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,SAAS;EACnF,IAAI,CAACH,WAAW,IAAI,CAACC,UAAU,EAAE,OAAO,KAAK;EAE7C,IAAMK,SAAS,GAAG,IAAIZ,IAAI,CAACM,WAAW,CAAC;EAEvC,IAAIE,eAAe,CAACK,WAAW,CAAC,CAAC,KAAK,OAAO,EAAE;IAE7C,IAAMC,SAAS,GAAGP,UAAU,GAAG,EAAE;IACjC,IAAMQ,OAAO,GAAG,IAAIf,IAAI,CAACY,SAAS,CAAC;IACnCG,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAGH,SAAS,CAAC;IAE9C,OAAOC,OAAO,CAACd,kBAAkB,CAAC,OAAO,EAAE;MACzCE,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdF,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIM,eAAe,CAACK,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;IAErD,IAAMK,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACb,UAAU,GAAG,IAAI,CAAC;IAC/C,IAAMQ,QAAO,GAAG,IAAIf,IAAI,CAACY,SAAS,CAAC;IACnCG,QAAO,CAACC,OAAO,CAACD,QAAO,CAACE,OAAO,CAAC,CAAC,GAAIC,UAAU,GAAG,CAAE,CAAC;IAErD,OAAOH,QAAO,CAACd,kBAAkB,CAAC,OAAO,EAAE;MACzCE,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdF,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM;IAEL,IAAMa,SAAO,GAAG,IAAIf,IAAI,CAACY,SAAS,CAAC;IACnCG,SAAO,CAACM,QAAQ,CAACN,SAAO,CAACO,QAAQ,CAAC,CAAC,GAAGC,QAAQ,CAAChB,UAAU,CAAC,CAAC;IAE3D,OAAOQ,SAAO,CAACd,kBAAkB,CAAC,OAAO,EAAE;MACzCE,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdF,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAGD,OAAO,IAAMsB,UAAU,GAAG,SAAbA,UAAUA,CAAIC,WAAW,EAAK;EACzC,IAAM1B,IAAI,GAAG,IAAIC,IAAI,CAACyB,WAAW,CAAC;EAClC1B,IAAI,CAACiB,OAAO,CAACjB,IAAI,CAACkB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,OAAOlB,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;IACtCE,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdF,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}