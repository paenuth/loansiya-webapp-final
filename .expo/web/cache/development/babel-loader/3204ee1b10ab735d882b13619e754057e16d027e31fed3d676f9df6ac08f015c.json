{"ast":null,"code":"import React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { UsersContext } from \"../../contexts/UsersContext\";\nimport TopBar from \"../../components/common/TopBar\";\nimport DashboardCard from \"../../components/common/DashboardCard\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UsersContext),\n    users = _useContext.users;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var officerCount = users.filter(function (user) {\n    return user.role === 'Officer' && user.status === 'Active';\n  }).length;\n  var opsCount = users.filter(function (user) {\n    return user.role === 'Ops' && user.status === 'Active';\n  }).length;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TopBar, {\n      navigation: navigation,\n      role: \"IT Admin\",\n      showNotifications: false\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsxs(View, {\n        style: [styles.cardRow, isMobile && styles.cardRowMobile],\n        children: [_jsx(DashboardCard, {\n          label: \"Total Active Loan Officers\",\n          value: officerCount\n        }), _jsx(DashboardCard, {\n          label: \"Total Active Operations Manager\",\n          value: opsCount\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.viewListButton, isMobile && styles.viewListButtonMobile],\n        onPress: function onPress() {\n          return navigation.navigate('UserManagement');\n        },\n        children: _jsx(Text, {\n          style: [styles.buttonText, isMobile && styles.buttonTextMobile],\n          children: \"View List\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f6f6f6'\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardRow: {\n    flexDirection: 'row',\n    gap: 20,\n    marginBottom: 20,\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  cardRowMobile: {\n    flexDirection: 'column',\n    gap: 15,\n    alignItems: 'center'\n  },\n  viewListButton: {\n    backgroundColor: '#0066ff',\n    paddingVertical: 12,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n    marginTop: 20,\n    minWidth: 200\n  },\n  viewListButtonMobile: {\n    paddingVertical: 14,\n    paddingHorizontal: 30,\n    marginTop: 25,\n    width: '80%',\n    maxWidth: 300\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  buttonTextMobile: {\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","useContext","View","Text","TouchableOpacity","StyleSheet","useWindowDimensions","UsersContext","TopBar","DashboardCard","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","_useContext","users","_useWindowDimensions","width","isMobile","officerCount","filter","user","role","status","length","opsCount","style","styles","container","children","showNotifications","content","cardRow","cardRowMobile","label","value","viewListButton","viewListButtonMobile","onPress","navigate","buttonText","buttonTextMobile","create","flex","backgroundColor","padding","alignItems","justifyContent","flexDirection","gap","marginBottom","flexWrap","paddingVertical","paddingHorizontal","borderRadius","marginTop","minWidth","maxWidth","color","fontWeight","fontSize","textAlign"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/screens/itadmin/DashboardScreen.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { UsersContext } from '../../contexts/UsersContext';\r\nimport TopBar from '../../components/common/TopBar';\r\nimport DashboardCard from '../../components/common/DashboardCard';\r\n\r\nexport default function DashboardScreen({ navigation }) {\r\n  const { users } = useContext(UsersContext);\r\n  const { width } = useWindowDimensions();\r\n  const isMobile = width < 768;\r\n  \r\n  const officerCount = users.filter(user =>\r\n    user.role === 'Officer' && user.status === 'Active'\r\n  ).length;\r\n  \r\n  const opsCount = users.filter(user =>\r\n    user.role === 'Ops' && user.status === 'Active'\r\n  ).length;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TopBar\r\n        navigation={navigation}\r\n        role=\"IT Admin\"\r\n        showNotifications={false}\r\n      />\r\n\r\n      <View style={styles.content}>\r\n        <View style={[styles.cardRow, isMobile && styles.cardRowMobile]}>\r\n          <DashboardCard\r\n            label=\"Total Active Loan Officers\"\r\n            value={officerCount}\r\n          />\r\n          <DashboardCard\r\n            label=\"Total Active Operations Manager\"\r\n            value={opsCount}\r\n          />\r\n        </View>\r\n        <TouchableOpacity\r\n          style={[styles.viewListButton, isMobile && styles.viewListButtonMobile]}\r\n          onPress={() => navigation.navigate('UserManagement')}\r\n        >\r\n          <Text style={[styles.buttonText, isMobile && styles.buttonTextMobile]}>View List</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f6f6f6',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  cardRow: {\r\n    flexDirection: 'row',\r\n    gap: 20,\r\n    marginBottom: 20,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  cardRowMobile: {\r\n    flexDirection: 'column',\r\n    gap: 15,\r\n    alignItems: 'center',\r\n  },\r\n  viewListButton: {\r\n    backgroundColor: '#0066ff',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 40,\r\n    borderRadius: 8,\r\n    marginTop: 20,\r\n    minWidth: 200,\r\n  },\r\n  viewListButtonMobile: {\r\n    paddingVertical: 14,\r\n    paddingHorizontal: 30,\r\n    marginTop: 25,\r\n    width: '80%',\r\n    maxWidth: 300,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  buttonTextMobile: {\r\n    fontSize: 15,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}