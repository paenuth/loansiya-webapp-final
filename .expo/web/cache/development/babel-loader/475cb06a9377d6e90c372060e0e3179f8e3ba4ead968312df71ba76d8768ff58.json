{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5600';\nexport var clientAPI = {\n  getAllClients: function () {\n    var _getAllClients = _asyncToGenerator(function* () {\n      try {\n        console.log('Fetching clients from:', API_BASE_URL);\n        var response = yield fetch(API_BASE_URL + \"/clients\");\n        if (!response.ok) {\n          throw new Error('Failed to fetch clients');\n        }\n        return response.json();\n      } catch (error) {\n        console.error('API Error:', error);\n        throw error;\n      }\n    });\n    function getAllClients() {\n      return _getAllClients.apply(this, arguments);\n    }\n    return getAllClients;\n  }(),\n  getClientById: function () {\n    var _getClientById = _asyncToGenerator(function* (cid) {\n      try {\n        var response = yield fetch(API_BASE_URL + \"/client/\" + cid);\n        if (!response.ok) {\n          throw new Error('Failed to fetch client');\n        }\n        return response.json();\n      } catch (error) {\n        console.error('API Error:', error);\n        throw error;\n      }\n    });\n    function getClientById(_x) {\n      return _getClientById.apply(this, arguments);\n    }\n    return getClientById;\n  }(),\n  getClientScore: function () {\n    var _getClientScore = _asyncToGenerator(function* (cid) {\n      try {\n        var response = yield fetch(API_BASE_URL + \"/score/\" + cid, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch client score');\n        }\n        return response.json();\n      } catch (error) {\n        console.error('API Error:', error);\n        throw error;\n      }\n    });\n    function getClientScore(_x2) {\n      return _getClientScore.apply(this, arguments);\n    }\n    return getClientScore;\n  }(),\n  processMetrics: function () {\n    var _processMetrics = _asyncToGenerator(function* (cid) {\n      try {\n        var response = yield fetch(API_BASE_URL + \"/metrics/\" + cid, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to process metrics');\n        }\n        return response.json();\n      } catch (error) {\n        console.error('API Error:', error);\n        throw error;\n      }\n    });\n    function processMetrics(_x3) {\n      return _processMetrics.apply(this, arguments);\n    }\n    return processMetrics;\n  }()\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","clientAPI","getAllClients","_getAllClients","_asyncToGenerator","console","log","response","fetch","ok","Error","json","error","apply","arguments","getClientById","_getClientById","cid","_x","getClientScore","_getClientScore","method","_x2","processMetrics","_processMetrics","_x3"],"sources":["C:/Users/ajohn/loansiya-webapp1.1.0/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5600';\r\n\r\nexport const clientAPI = {\r\n  // Get all clients from the Credit Scoring API\r\n  getAllClients: async () => {\r\n    try {\r\n      console.log('Fetching clients from:', API_BASE_URL);\r\n      const response = await fetch(`${API_BASE_URL}/clients`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch clients');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get single client by CID\r\n  getClientById: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/client/${cid}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch client');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get client score data\r\n  getClientScore: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/score/${cid}`, {\r\n        method: 'POST'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch client score');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Process client metrics\r\n  processMetrics: async (cid) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/metrics/${cid}`, {\r\n        method: 'POST'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process metrics');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}