{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({\n  currentUser: null,\n  setCurrentUser: function setCurrentUser() {},\n  resetPassword: function resetPassword() {}\n});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(function () {\n      var savedUser = localStorage.getItem('currentUser');\n      return savedUser ? JSON.parse(savedUser) : null;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  useEffect(function () {\n    if (currentUser) {\n      localStorage.setItem('currentUser', JSON.stringify(currentUser));\n    } else {\n      localStorage.removeItem('currentUser');\n    }\n  }, [currentUser]);\n  var resetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* (username, newPassword) {\n      if (!username || !newPassword) {\n        throw new Error('Username and new password are required');\n      }\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve({\n            success: true,\n            message: 'Password reset successful'\n          });\n        }, 1000);\n      });\n    });\n    return function resetPassword(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(AuthContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      resetPassword: resetPassword\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","useEffect","jsx","_jsx","AuthContext","currentUser","setCurrentUser","resetPassword","AuthProvider","_ref","children","_useState","savedUser","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","setItem","stringify","removeItem","_ref2","_asyncToGenerator","username","newPassword","Error","Promise","resolve","setTimeout","success","message","_x","_x2","apply","arguments","Provider","value"],"sources":["C:/Users/ajohn/loansiya-webapp1.3.4/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => {},\r\n  resetPassword: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    // Try to get saved user from localStorage on init\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  });\r\n\r\n  // Update localStorage whenever currentUser changes\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n    } else {\r\n      localStorage.removeItem('currentUser');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const resetPassword = async (username, newPassword) => {\r\n    // Validate inputs\r\n    if (!username || !newPassword) {\r\n      throw new Error('Username and new password are required');\r\n    }\r\n\r\n    // In a real app, this would make an API call to reset the password\r\n    // For now, we'll just simulate the process\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Simulate successful password reset\r\n        resolve({\r\n          success: true,\r\n          message: 'Password reset successful'\r\n        });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      currentUser,\r\n      setCurrentUser,\r\n      resetPassword,\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE3D,OAAO,IAAMC,WAAW,GAAGL,aAAa,CAAC;EACvCM,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE,SAAhBA,cAAcA,CAAA,EAAQ,CAAC,CAAC;EACxBC,aAAa,EAAE,SAAfA,aAAaA,CAAA,EAAQ,CAAC;AACxB,CAAC,CAAC;AAEF,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAsCX,QAAQ,CAAC,YAAM;MAEnD,IAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACrD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;IACjD,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAP,SAAA;IAJKN,WAAW,GAAAY,UAAA;IAAEX,cAAc,GAAAW,UAAA;EAOlChB,SAAS,CAAC,YAAM;IACd,IAAII,WAAW,EAAE;MACfQ,YAAY,CAACM,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,SAAS,CAACf,WAAW,CAAC,CAAC;IAClE,CAAC,MAAM;MACLQ,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;IACxC;EACF,CAAC,EAAE,CAAChB,WAAW,CAAC,CAAC;EAEjB,IAAME,aAAa;IAAA,IAAAe,KAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,WAAW,EAAK;MAErD,IAAI,CAACD,QAAQ,IAAI,CAACC,WAAW,EAAE;QAC7B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MAIA,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;QAC9BC,UAAU,CAAC,YAAM;UAEfD,OAAO,CAAC;YACNE,OAAO,EAAE,IAAI;YACbC,OAAO,EAAE;UACX,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ,CAAC;IAAA,gBAjBKxB,aAAaA,CAAAyB,EAAA,EAAAC,GAAA;MAAA,OAAAX,KAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBlB;EAED,OACEhC,IAAA,CAACC,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAC3BhC,WAAW,EAAXA,WAAW;MACXC,cAAc,EAAdA,cAAc;MACdC,aAAa,EAAbA;IACF,CAAE;IAAAG,QAAA,EACCA;EAAQ,CACW,CAAC;AAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}